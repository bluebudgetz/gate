scalar Time

schema {
    query: Query
    mutation: Mutation
}

type Account {
    id: Int!
    createdOn: Time!
    updatedOn: Time
    name: String!
    childCount: Int!
    incoming: Float!
    outgoing: Float!
}

type Transaction {
    id: Int!
    createdOn: Time!
    updatedOn: Time
    origin: String!
    source: Account!
    target: Account!
    amount: Float!
    comments: String
}

type Query {
    account(id: Int!): Account!
    rootAccounts: [Account!]!
    childAccounts(parentId: Int!): [Account!]!
    transaction(id: Int!): Transaction!
    transactions(from: Time!, until: Time!): [Transaction!]!
}

type Mutation {
    createAccount(name: String!, parentId: Int): Account!
    createTransaction(
        origin: String!,
        sourceAccountId: Int!,
        targetAccountId: Int!,
        amount: Float!,
        comments: String): Transaction!
}
